{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omnia\\\\Desktop\\\\web\\\\web\\\\src\\\\Pages\\\\LanguagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../Components/Navbar';\nimport '../Styles/LanguagePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePage() {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n    // Optional: store in localStorage or update global state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-icon\",\n      onClick: () => openPage(\"/homepage\"),\n      children: \"\\uD83C\\uDFE0 Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Language Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select your preferred language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-dropdown\",\n          children: \"Choose a language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-dropdown\",\n          value: selectedLanguage,\n          onChange: handleLanguageChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"English\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Arabic\",\n            children: \"Arabic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"selected-language\",\n        children: [\"Current Language: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagePage, \"SSLyE5gu+LcG23AATM2EcDgmbj4=\");\n_c = LanguagePage;\nfunction openPage(page) {\n  window.location.href = page;\n}\nexport default LanguagePage;\nvar _c;\n$RefreshReg$(_c, \"LanguagePage\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","LanguagePage","_s","selectedLanguage","setSelectedLanguage","handleLanguageChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","openPage","htmlFor","id","onChange","_c","page","window","location","href","$RefreshReg$"],"sources":["C:/Users/omnia/Desktop/web/web/src/Pages/LanguagePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport '../Styles/LanguagePage.css';\r\n\r\nfunction LanguagePage() {\r\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\r\n\r\n  const handleLanguageChange = (event) => {\r\n    setSelectedLanguage(event.target.value);\r\n    // Optional: store in localStorage or update global state\r\n  };\r\n\r\n  return (\r\n    <div className=\"language-container\">\r\n      <Navbar />\r\n      <div className=\"home-icon\" onClick={() => openPage(\"/homepage\")}>\r\n          üè† Home\r\n        </div>\r\n      <div className=\"language-content\">\r\n        <h1>Language Settings</h1>\r\n        <p>Select your preferred language:</p>\r\n\r\n        <div className=\"language-selector\">\r\n          <label htmlFor=\"language-dropdown\">Choose a language:</label>\r\n          <select\r\n            id=\"language-dropdown\"\r\n            value={selectedLanguage}\r\n            onChange={handleLanguageChange}\r\n          >\r\n            <option value=\"English\">English</option>\r\n            <option value=\"Arabic\">Arabic</option>\r\n          </select>\r\n        </div>\r\n\r\n        <p className=\"selected-language\">\r\n          Current Language: <strong>{selectedLanguage}</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nfunction openPage(page) {\r\n    window.location.href = page;\r\n  }\r\n\r\nexport default LanguagePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}